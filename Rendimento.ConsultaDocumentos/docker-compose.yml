version: '3.8'

services:
  # API - Consulta Documentos
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: consultadocumentos-api
    ports:
      - "5000:8080"  # Porta HTTP
      - "5001:8081"  # Porta HTTPS (se necessário)
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=RendimentoConsultaDocumentos;User Id=sa;Password=YourStrong@Password123;TrustServerCertificate=True;
      - Redis__Enabled=true
      - Redis__ConnectionString=redis:6379
      - ExternalProviders__UseMockProviders=true
      - JwtSettings__Secret=MyVerySecretKeyForJwtTokenGeneration123!@#
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - consultadocumentos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs

  # WEB - Aplicação MVC
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: consultadocumentos-web
    ports:
      - "5002:8080"  # Porta HTTP Web UI
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ApiClients__JsonPlaceholder__BaseUrl=http://api:8080/api
    depends_on:
      api:
        condition: service_healthy
    networks:
      - consultadocumentos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: consultadocumentos-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Password123
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - consultadocumentos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourStrong@Password123 -C -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis (Cache - Opcional)
  redis:
    image: redis:7-alpine
    container_name: consultadocumentos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - consultadocumentos-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Mock Server para Provedores Externos (Opcional - para testes)
  # Descomente se precisar de um mock server para Serpro/Serasa
  # mock-server:
  #   image: mockserver/mockserver:latest
  #   container_name: consultadocumentos-mockserver
  #   ports:
  #     - "8000:1080"
  #   environment:
  #     - MOCKSERVER_PROPERTY_FILE=/config/mockserver.properties
  #   networks:
  #     - consultadocumentos-network
  #   restart: unless-stopped

networks:
  consultadocumentos-network:
    driver: bridge

volumes:
  sqlserver-data:
    driver: local
  redis-data:
    driver: local
